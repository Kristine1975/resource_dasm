Style:
- Use phosg reverse_endian types and get rid of bswap/byteswap calls
- Use StringReader in most places where we currently do pointer arithmetic

Documented resource formats:
- FOND
- ICN#/ics#: can technically have more than a single monochrome image + mask image in them, but we currently don't support this
- ictb: (IM: Toolbox Essentials, 6-159)
- mctb: (IM: Toolbox Essentials, 3-156; there's a TMPL for this too)
- MOOV/MooV/moov
- Unimplemented equivalences from ResEdit RMAPs:
- - PREC 0, 1 => PRC0, PREC 3, 4 => PRC3
- - INTL 0 => itl0, INTL 1 => itl1
- ppat type 2 is not monochrome; it's RGB (see QuickDraw docs). Unclear if these are ever stored in resource forks though.

Undocumented resource formats:
- CREL: looks like another form of CODE relocation info; there appear to be at least two different formats (see Realmz 5.1.6 vs. After Dark)
- DATA and DREL: some apps use these to initialize the A5 world
- infa: TMPL from ResEdit appears incorrect
- POST: TMPL from ResEdit appears incorrect

Custom formats used in multiple game/app series:
- 'ADCR' encoding (used for some CODEs, including CODE 0)
- 'ajcp' compression/encryption (used in Zen and Prince of Darkness... is it a FutureBASIC thing?)
- Lemmings / Prince of Persia: SHPD (these look like references to segments of the data fork), SHPT
- hypercard_dasm fails horrendously on Spelunx and its secondary stacks (probably the stack format is intermediate)

Custom formats used by a single game/app series:
- Realmz (realmz_dasm)
- - Rogue encounter and item IDs (and result codes) appear incorrect in complex encounter disassembly
- - Custom choice option strings seem wrong in script disassembly
- - Localize things better in script disassembly (e.g. paste XAP disassembly into places where XAPs are referenced; paste complex encounter disassembly into complex_encounter opcodes, etc.)
- Avara: HSND (has TMPL, but appears to also have undocumented compression)
- Beyond Dark Castle
- - PPCT format seems mostly backward compatible, but some images don't decode properly - maybe it was extended
- - PSCR dimensions or encoding are different too
- DeadEnd: SNGV (seems to be a very simple sequence format; it has a TMPL even)
- Factory: 1img, 4img, 8img (these look like just fixed-size uncompressed images; find the right clut and render them)
- Mario Teaches Typing: Img, Pak (sprites, probably)
- Spectre Supreme: shap (these might be 3D shapes)
